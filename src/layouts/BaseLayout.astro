---
export interface Props {
  title: string;
  description?: string;
}

import { profile } from '../data/profile';

const { title, description = "Portfolio personal de Antonio J. Padilla - Desarrollador Full Stack & Especialista en IA" } = Astro.props;
---

<!DOCTYPE html>
<html lang="es" class="dark:[color-scheme:dark]">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <script>
      // Persistencia de tema antes del paint
      (function() {
        try {
          const saved = localStorage.getItem('theme')
          const mql = window.matchMedia('(prefers-color-scheme: dark)')
          const prefersDark = mql.matches
          const isDark = saved === 'dark' || (saved === null && prefersDark)
          document.documentElement.classList.toggle('dark', isDark)
        } catch (_) {}
      })()
    </script>
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
    <header class="fixed top-0 left-0 right-0 z-50 backdrop-blur-md bg-white/90 dark:bg-gray-900/90 border-b border-gray-200/20 dark:border-gray-800/20">
      <div class="container max-w-6xl mx-auto px-4 py-4 flex items-center justify-between">
        <a href="/" class="text-xl font-bold text-gray-900 dark:text-white hover:text-primary-600 transition-colors">
          {profile.name}
        </a>
        
        <!-- Desktop Navigation -->
        <nav class="hidden md:flex items-center space-x-8">
          <a href="/" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Inicio
          </a>
          <a href="/#experience" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Experiencia
          </a>
          <a href="/#technologies" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Tecnologías
          </a>
          <a href="/proyectos" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Proyectos
          </a>
          <a href="/#contact" class="text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Contacto
          </a>
          
          <!-- Theme Toggle -->
          <button id="theme-toggle" aria-label="Cambiar tema" class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors">
            <svg class="h-5 w-5 text-gray-700 dark:hidden" viewBox="0 0 24 24" fill="currentColor">
              <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
            </svg>
            <svg class="h-5 w-5 text-gray-300 hidden dark:inline" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="12" cy="12" r="4"/>
              <path d="M12 2v2M12 20v2M4 12H2M22 12h-2M5.64 5.64 4.22 4.22M19.78 19.78l-1.42-1.42M18.36 5.64l1.42-1.42M4.22 19.78 5.64 18.36"/>
            </svg>
          </button>
        </nav>
        
        <!-- Mobile Menu Button -->
        <button id="mobile-menu-button" class="md:hidden p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors">
          <svg class="h-6 w-6 text-gray-700 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
      
      <!-- Mobile Menu -->
      <div id="mobile-menu" class="md:hidden hidden bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-800">
        <div class="container px-4 py-4 space-y-4">
          <a href="/" class="block text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Inicio
          </a>
          <a href="/#experience" class="block text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Experiencia
          </a>
          <a href="/#technologies" class="block text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Tecnologías
          </a>
          <a href="/proyectos" class="block text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Proyectos
          </a>
          <a href="/#contact" class="block text-gray-700 dark:text-gray-300 hover:text-primary-600 transition-colors font-medium">
            Contacto
          </a>
        </div>
      </div>
    </header>

    <main class="pt-20">
      <slot />
    </main>

    <footer class="mt-16 border-t border-gray-200 dark:border-gray-800 py-8">
      <div class="container text-center text-sm text-gray-600 dark:text-gray-400">
        © {new Date().getFullYear()} {profile.name}. Todos los derechos reservados.
      </div>
    </footer>

    <script>
      // Theme toggle
      const btn = document.getElementById('theme-toggle')
      if (btn) {
        btn.addEventListener('click', () => {
          const isDark = document.documentElement.classList.toggle('dark')
          try { localStorage.setItem('theme', isDark ? 'dark' : 'light') } catch (_) {}
        })
      }
      
      // Mobile menu toggle
      const mobileMenuButton = document.getElementById('mobile-menu-button')
      const mobileMenu = document.getElementById('mobile-menu')
      
      if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden')
        })
        
        // Close mobile menu when clicking on a link
        const mobileLinks = mobileMenu.querySelectorAll('a')
        mobileLinks.forEach(link => {
          link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden')
          })
        })
        
        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
          if (!mobileMenuButton.contains(e.target) && !mobileMenu.contains(e.target)) {
            mobileMenu.classList.add('hidden')
          }
        })
      }
    </script>
  </body>
</html>

<style is:global>
  @import '../globals.css';
</style>